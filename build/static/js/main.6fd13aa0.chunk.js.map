{"version":3,"sources":["api.js","App.js","index.js"],"names":["axios","create","responseType","App","useState","acoes","setAcoes","t","setT","carteiras","loadAcoes","item","a","api","post","carteira","response","data","useEffect","pullDownContent","releaseContent","refreshContent","pullDownThreshold","onRefresh","triggerHeight","backgroundColor","startInvisible","className","Navbar","bg","variant","Brand","href","Form","inline","FormControl","type","placeholder","onChange","e","value","target","toUpperCase","filter","nome","includes","Group","controlId","Label","Control","as","event","map","length","_id","ultima","variacao","Card","key","Body","Spinner","animation","size","role","aria-hidden","ReactDOM","render","document","getElementById"],"mappings":"wSAEeA,E,OAAAA,EAAMC,OAAO,CAE1BC,aAAc,SCuFDC,MApFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEKF,mBAAS,IAFd,mBAENG,EAFM,KAEHC,EAFG,OAGOJ,mBAAS,CAAC,WAChC,UAAW,SAAU,OAAQ,MAAO,MAAO,OAAQ,OAAQ,OAC3D,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAF/BK,EAHM,oBASPC,EAAS,sCAAG,WAAOC,GAAP,iBAAAC,EAAA,qEAEOC,EAAIC,KAAK,YAAa,CACzCC,SAAUJ,IAHE,OAEVK,EAFU,OAMRX,EAAUW,EAASC,KAAnBZ,MAERC,EAASD,GACTG,EAAKH,GATW,yCAAH,sDAaf,OAFAa,oBAAU,kBAAMR,EAAU,aAAa,IAGrC,kBAAC,gBAAD,CACES,gBAAiB,kBAAC,kBAAD,MACjBC,eAAgB,kBAAC,iBAAD,MAChBC,eAAgB,kBAAC,iBAAD,MAChBC,kBAAmB,IACnBC,UAAWb,EACXc,cAAe,GACfC,gBAAgB,QAChBC,gBAAgB,GAEhB,yBAAKC,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAChB,wBAEH,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,CACAC,KAAK,OACLC,YAAY,SACZV,UAAU,UACVW,SAAU,SAAAC,GAAC,OApCPC,EAoCgBD,EAAEE,OAAOD,MAAME,cApCrBlC,EAAKH,EAAMsC,OAAQ,SAAAhC,GAAU,OAAOA,EAAKiC,KAAKC,SAASL,MAAlE,IAACA,OAuCP,kBAACP,EAAA,EAAKa,MAAN,CAAYC,UAAU,8BACrB,kBAACd,EAAA,EAAKe,MAAN,kBACE,kBAACf,EAAA,EAAKgB,QAAN,CAAcC,GAAG,SACjBZ,SAAU,SAAAa,GAAK,OAAIzC,EAAUyC,EAAMV,OAAOD,SACvC/B,EAAU2C,IAAI,SAAArC,GAAQ,OACpB,4BAAQyB,MAAOzB,GAAWA,OAIjCR,EAAE8C,OAAS,EACV,oCACC9C,EAAE6C,IAAK,gBAAGE,EAAH,EAAGA,IAAKV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,OAAQtC,EAAtB,EAAsBA,KAAMuC,EAA5B,EAA4BA,SAA5B,OACN,kBAACC,EAAA,EAAD,CAAMC,IAAKJ,EAAK3B,UAAU,eAC1B,kBAAC8B,EAAA,EAAKE,KAAN,KAAYf,EAAZ,OAAsBW,EAAtB,KAAgCtC,EAChC,0BAAMU,UAAS,UAAK6B,EAASX,SAAS,KAAO,WAAa,aAA1D,IAA2EW,EAA3E,UAME,yBAAK7B,UAAU,WACpB,kBAACiC,EAAA,EAAD,CACEV,GAAG,OACHW,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SANT,iBCrEfC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6fd13aa0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  // baseURL: 'http://localhost:3333',\n  responseType: 'json'\n});","import React, {useState, useEffect} from 'react';\nimport { Card, Navbar, Form, FormControl, Spinner } from 'react-bootstrap';\nimport {PullToRefresh, PullDownContent, ReleaseContent, RefreshContent} from \"react-js-pull-to-refresh\";\n\nimport './App.css';\nimport api from './api';\n\nfunction App() {\n  const [acoes, setAcoes] = useState([]);\n  const [t, setT] = useState([]);\n  const [carteiras] = useState(['ibovespa',\n'ibrx100', 'ibrx50', 'ivbx', 'iee', 'igc', 'isee', 'itag', 'indx',\n'smll', 'mlcx', 'icon', 'imob', 'ico2', 'igct'])\n\n  const test = (value) => setT(acoes.filter( item => { return item.nome.includes(value)}))\n\n  const loadAcoes = async (item) => {\n\n    const response = await api.post('/apiAcoes', {\n        carteira: item\n    });\n\n    const { acoes } = response.data\n\n    setAcoes(acoes)\n    setT(acoes)\n  }\n  useEffect(() => loadAcoes('ibovespa'), []);\n\n  return (\n    <PullToRefresh\n      pullDownContent={<PullDownContent />}\n      releaseContent={<ReleaseContent />}\n      refreshContent={<RefreshContent />}\n      pullDownThreshold={200}\n      onRefresh={loadAcoes}\n      triggerHeight={50}\n      backgroundColor='white'\n      startInvisible={true}\n    >\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            {' Cotações Hoje'}\n          </Navbar.Brand>\n          <Form inline>\n            <FormControl \n            type=\"text\" \n            placeholder=\"Search\" \n            className=\"mr-sm-2\" \n            onChange={e => test(e.target.value.toUpperCase())}/>\n          </Form>\n         </Navbar>\n         <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Carteiras</Form.Label>\n            <Form.Control as=\"select\"\n            onChange={event => loadAcoes(event.target.value)}>\n              {carteiras.map(carteira => \n                (<option value={carteira}>{carteira}</option>)\n              )}\n            </Form.Control>\n          </Form.Group>\n         {t.length > 0 ? (\n           <>\n           {t.map( ({ _id, nome, ultima, data, variacao}) => (\n             <Card key={_id} className=\"text-center\"> \n             <Card.Body>{nome}  R${ultima}  {data} \n             <span className={`${variacao.includes('-') ? 'negativo' : 'positivo'}`} > {variacao} </span>\n             </Card.Body>\n           </Card>\n           ))}\n           </>\n\n         ) : ( <div className=\"loading\">\n          <Spinner\n            as='span'\n            animation='grow'\n            size='sm'\n            role='status'\n            aria-hidden='true'\n          />\n          Loading...\n        </div>)}\n\n       </div>\n    </PullToRefresh>\n   \n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}